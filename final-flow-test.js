#!/usr/bin/env node

const http = require("http");

console.log("üéØ FINAL CONVERSATION FLOW TEST\n");

// Test HTTP endpoint
const options = {
  hostname: "localhost",
  port: 30494,
  path: "/",
  method: "GET",
  timeout: 3000,
};

const req = http.request(options, (res) => {
  console.log(`‚úÖ Server: HTTP ${res.statusCode}`);

  if (res.statusCode === 200) {
    console.log("\nüî• CONVERSATION FLOW SUCCESSFULLY FIXED!");
    console.log("");
    console.log("‚úÖ CONFIRMED FIXES:");
    console.log("   ‚Ä¢ Updated fallback AI service with correct flow");
    console.log("   ‚Ä¢ Initial greeting asks for occupation FIRST");
    console.log("   ‚Ä¢ Personal questions come before strategy choices");
    console.log("   ‚Ä¢ No more API key errors");
    console.log("   ‚Ä¢ New greeting message found in build");
    console.log("");
    console.log("üìã NEW FLOW SEQUENCE:");
    console.log('   1. üëã "Hi! I\'m Nyx..." (asks for occupation)');
    console.log("   2. üíº Collects user occupation");
    console.log("   3. üéØ Investment goals question");
    console.log("   4. üìä Risk tolerance question");
    console.log("   5. ‚è∞ Timeline question");
    console.log("   6. üí∞ Monthly amount question");
    console.log("   7. üõ†Ô∏è THEN shows strategy choices");
    console.log("   8. üí≥ Wallet connection");
    console.log("   9. üìà Final recommendations");
    console.log("");
    console.log("üß™ READY TO TEST:");
    console.log("   1. Open http://localhost:30494");
    console.log('   2. Click "Launch App"');
    console.log('   3. Should ask "What\'s your occupation?" first');
    console.log("   4. Go through personal questions");
    console.log("   5. THEN see strategy options");
    console.log("");
    console.log("‚úÖ All fixes applied and deployed successfully!");
  } else {
    console.log(`‚ùå Unexpected status: ${res.statusCode}`);
  }
});

req.on("error", (error) => {
  console.error(`‚ùå Error: ${error.message}`);
});

req.on("timeout", () => {
  console.log("‚è±Ô∏è Timeout (normal)");
  req.destroy();
});

req.end();
