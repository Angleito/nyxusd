# Docker validation container for NyxUSD AI System
FROM node:18-alpine AS validator

WORKDIR /app

# Install basic dependencies
RUN apk add --no-cache curl jq

# Copy package files
COPY package*.json ./
COPY frontend/package*.json ./frontend/

# Install dependencies
RUN npm install --only=production
RUN cd frontend && npm install --only=production

# Copy application source
COPY frontend/ ./frontend/
COPY docker-ai-validation.js ./
COPY libs/ ./libs/

# Build frontend to validate AI components
RUN cd frontend && npm run build

# Create validation script
RUN echo '#!/bin/sh' > /app/validate.sh && \
    echo 'echo "🐋 Docker AI System Validation Starting..."' >> /app/validate.sh && \
    echo 'echo ""' >> /app/validate.sh && \
    echo 'echo "📦 Container Environment:"' >> /app/validate.sh && \
    echo 'echo "  Node version: $(node --version)"' >> /app/validate.sh && \
    echo 'echo "  npm version: $(npm --version)"' >> /app/validate.sh && \
    echo 'echo "  Working directory: $(pwd)"' >> /app/validate.sh && \
    echo 'echo ""' >> /app/validate.sh && \
    echo 'echo "🎯 Frontend Build Status:"' >> /app/validate.sh && \
    echo 'if [ -d "frontend/dist" ]; then' >> /app/validate.sh && \
    echo '  echo "  ✅ Frontend built successfully"' >> /app/validate.sh && \
    echo '  echo "  📊 Build artifacts:"' >> /app/validate.sh && \
    echo '  ls -la frontend/dist/ | head -10' >> /app/validate.sh && \
    echo 'else' >> /app/validate.sh && \
    echo '  echo "  ❌ Frontend build failed"' >> /app/validate.sh && \
    echo '  exit 1' >> /app/validate.sh && \
    echo 'fi' >> /app/validate.sh && \
    echo 'echo ""' >> /app/validate.sh && \
    echo 'echo "🤖 AI System Validation:"' >> /app/validate.sh && \
    echo 'node docker-ai-validation.js' >> /app/validate.sh && \
    echo 'VALIDATION_RESULT=$?' >> /app/validate.sh && \
    echo 'echo ""' >> /app/validate.sh && \
    echo 'echo "🐋 Docker Container Validation Complete!"' >> /app/validate.sh && \
    echo 'exit $VALIDATION_RESULT' >> /app/validate.sh && \
    chmod +x /app/validate.sh

# Set up health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Expose port for potential web interface
EXPOSE 3000

# Default command runs validation
CMD ["/app/validate.sh"]